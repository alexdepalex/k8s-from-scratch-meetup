#cloud-config

---
coreos:
  etcd2:
    name: "%H"
    advertise-client-urls: http://$public_ipv4:2379
    initial-advertise-peer-urls: http://$private_ipv4:2380
    initial-cluster: core-01=http://172.17.8.101:2380,core-02=http://172.17.8.102:2380,core-03=http://172.17.8.103:2380
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    listen-peer-urls: http://$private_ipv4:2380,http://$private_ipv4:7001
  fleet:
    public-ip: "$public_ipv4"
  units:
  - name: etcd2.service
    command: start
  - name: fleet.service
    command: start
  - name: docker-tcp.socket
    command: start
    enable: true
    content: |
      [Unit]
      Description=Docker Socket for the API

      [Socket]
      ListenStream=2375
      Service=docker.service
      BindIPv6Only=both

      [Install]
      WantedBy=sockets.target
  - name: kube-kubelet.service
    enable: false
    content: |
      [Unit]
      Description=Kubernetes Kubelet
      Documentation=https://github.com/kubernetes/kubernetes
      Requires=docker.service
      After=docker.service
      Wants=kube-kubelet-master-configs.service
      After=kube-kubelet-master-configs.service

      [Service]
      ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests
      ExecStart=/opt/bin/kubelet \
      --api-servers=http://172.17.8.101:8080 \
      --healthz-bind-address=0.0.0.0 \
      --config=/etc/kubernetes/manifests \
      --network-plugin=cni \
      --network-plugin-dir=/etc/cni/net.d \
      --allow-privileged=true
      Restart=always
      RestartSec=10
  - name: kube-proxy.service
    enable: false
    content: |
      [Unit]
      Description=Kubernetes Proxy
      Documentation=https://github.com/kubernetes/kubernetes

      [Service]
      ExecStart=/opt/bin/kube-proxy \
      --master=http://172.17.8.101:8080 \
      --logtostderr=true
      Restart=always
      RestartSec=10
  - name: kube-kubelet-master-configs.service
    command: start
    content: |
      [Unit]
      Description=Activate Kubernetes Master coponents
      ConditionHost=core-01
      [Service]
      ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests
      ExecStart=/bin/cp /etc/kubernetes/configs/kube-apiserver.yml /etc/kubernetes/configs/kube-scheduler.yml /etc/kubernetes/configs/kube-controller-manager.yml /etc/kubernetes/manifests
      RemainAfterExit=yes
      Type=oneshot
write_files:
- path: "/etc/kubernetes/configs/kube-apiserver.yml"
  permissions: '0755'
  content: |
    ---
    apiVersion: v1
    kind: Pod
    metadata:
      name: kube-apiserver
      namespace: kube-system
    spec:
      hostNetwork: true
      containers:
      - name: kube-apiserver
        image: gcr.io/google_containers/hyperkube:v1.4.0
        command:
        - /hyperkube
        - apiserver
        - --bind-address=$private_ipv4
        - --etcd-servers=http://localhost:2379
        - --allow-privileged=true
        - --insecure-bind-address=0.0.0.0
        - --service-cluster-ip-range=10.0.16.0/22
        - --service-node-port-range=25000-32767
        - --secure-port=8084
        - --advertise-address=$private_ipv4
        - --admission-control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota
        ports:
        - containerPort: 8084
          hostPort: 8084
          name: https
        - containerPort: 8080
          hostPort: 8080
          name: local
- path: "/etc/kubernetes/configs/kube-controller-manager.yml"
  permissions: '0755'
  content: |
    ---
    apiVersion: v1
    kind: Pod
    metadata:
      name: kube-controller-manager
      namespace: kube-system
    spec:
      hostNetwork: true
      containers:
      - name: kube-controller-manager
        image: gcr.io/google_containers/hyperkube:v1.4.0
        command:
        - /hyperkube
        - controller-manager
        - --master=http://$private_ipv4:8080
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 10252
          initialDelaySeconds: 15
          timeoutSeconds: 1
- path: "/etc/kubernetes/configs/kube-scheduler.yml"
  permissions: '0755'
  content: |
    ---
    apiVersion: v1
    kind: Pod
    metadata:
      name: kube-scheduler
      namespace: kube-system
    spec:
      hostNetwork: true
      containers:
      - name: kube-scheduler
        image: gcr.io/google_containers/hyperkube:v1.4.0
        command:
        - /hyperkube
        - scheduler
        - --master=http://$private_ipv4:8080
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 10251
          initialDelaySeconds: 15
          timeoutSeconds: 1
